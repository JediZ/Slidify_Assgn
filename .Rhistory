aa <- c(49, 1000, 592, 560, 1320, 909, 1243, 646, 410, 482)
bb <- c(1041, 130, 728, 262, 1486, 173, 1080, 403, 848, 614)
hist(aa)
hist(bb)
hist(aa,break=50)
hist(aa,break=50)
hist(aa,breaks=50)
hist(aa,breaks=10)
hist(bb,breaks=10)
hist(bb,breaks=50)
summary(aa)
summary(bb)
boxplot(aa)
boxplot(c(aa,bb)
)
boxplot(bb)
boxplot(aa)
?boxplot
boxplot(aa)
boxplot(aa,add=T)
boxplot(bb,add=T)
boxplot(aa)
boxplot(bb,add=T)
?boxplot
boxplot(aa,at=1-0.2)
boxplot(bb,add=T,at=1-0.2)
boxplot(bb,add=T,at=1+0.2)
boxplot(aa,at=1-0.2)
boxplot(bb,add=T,at=1+0.2)
boxplot(aa,at=0.5)
boxplot(aa,at=1)
boxplot(bb,add=T,at=1.5)
boxplot(aa,at=0.6,xlim=c(0,2),ylim=c(0,2000))
boxplot(bb,add=T,at=1.6)
?qqplot
qqplot(aa,bb)
abline(y~x)
?abline
abline(0,1)
?chisq.test
dat <- matrix(c(80, 60, 15, 30, 5, 10), 2)
chisq.test(dat, correct = FALSE)
pnorm(0.05)
qnorm(0.05)
qnorm(0.025)
1-qnorm(0.975)
qnorm(0.975)
qnorm(1-0.05)
qnorm(1-0.025)
n1 = 3801
mean1 = 1798
sd1 = 1668
n2 = 277
mean2 =9140
sd2 = 5926
alpha = 0.05
mean.diff <- mean2 -  mean1
z.score <- qnorm(1-alpha/2)
plusminus = z.score * sqrt(sd1*sd1/n1 + sd2*sd2/n2)
ci.lower = mean.diff - plusminus
ci.upper = mean.diff + plusminus
c(ci.lower,ci.upper)
ci.twopop.mean <- function(n1,mean1,sd1,n2,mean2,sd2, alpha) {
mean.diff <- mean2 -  mean1
z.score <- qnorm(1-alpha/2)
plusminus = z.score * sqrt(sd1*sd1/n1 + sd2*sd2/n2)
ci.lower = mean.diff - plusminus
ci.upper = mean.diff + plusminus
c(ci.lower,ci.upper)
}
n1 = 3801
mean1 = 1798
sd1 = 1668
n2 = 277
mean2 =9140
sd2 = 5926
alpha = 0.05
ci.twopop.mean(n1,mean1,sd1,n2,mean2,sd2, alpha)
alv <- 3
var.alv <- 1/4
zel <- 7
var.zel <- 1
weighted.mean <- function(means,vars){
# vars has to have same number as means and all positive
n <- length(means)
w.total <- sum(1/vars)
weights <- 1/vars / w.total
sum(means*weights)
}
weighted.mean(c(alv,zel),c(var.alv,var.zel))
dat <- matrix(c(80, 60, 15, 30, 5, 10), 2)
chisq.test(dat, correct = FALSE)
dat <- c(275, 183, 133, 111, 76, 66, 66, 44, 56)
p <- log10((1:9) + 1) - log10(1:9)
chisq.test(dat, p = p, correct = FALSE)
dat <- matrix(c(65, 70, 15, 35, 30, 85), 3)
colSums(dat)/sum(dat)
?colSums
?fisher.test
dat <- matrix(c(4,2,1,6),2)
fisher.test(dat)
dat <- matrix(c(3,1,2,4),2)
fisher.test(dat, alternative = "greater")
dat <- matrix(c(0.53,0.35,0.12, 140/290, 100/290, 50/290), 2)
chisq.test(dat, correct = FALSE)
dat <- matrix(c(43,4,8,45), 2)
chisq.test(dat, correct = FALSE)
dat <- matrix(c(52,52,52,52,46,54,49,51), 2)
chisq.test(dat, correct = FALSE)
dat <- matrix(c(65,70,15,35,30,85), 2)
chisq.test(dat, correct = FALSE)
dat <- matrix(c(0.53,0.35,0.12, 140/290, 100/290, 50/290), 2)
chisq.test(dat, correct = FALSE)
dat <- c(275, 183, 133, 111, 76, 66, 66, 44, 56)
p <- log10((1:9) + 1) - log10(1:9)
chisq.test(dat, p = p, correct = FALSE)
p
?chisq.test
dat0 <- c(0.53,0.35,0.12)
dat <- c(140,100,50)
chisq.test(dat0, dat, correct = FALSE)
p <- c(0.53,0.35,0.12)
dat <- c(140,100,50)
chisq.test(dat,p, correct = FALSE)
p <- c(0.53,0.35,0.12)
dat <- c(140,100,50)
chisq.test(dat,p=p, correct = FALSE)
dat <- matrix(c(43,4,8,45), 2)
chisq.test(dat, correct = FALSE)
dat <- matrix(c(52,52,52,52,46,54,49,51), 2)
chisq.test(dat, correct = FALSE)
dat <- matrix(c(65, 70, 15, 35, 30, 85), 3)
colSums(dat)/sum(dat)
chisq.test(dat, correct = FALSE)
dev.cur()
mm <- matrix(rnorm(100),10,10)
mm
heatmap(mm)
mm <- matrix(rnorm(10000),100,100)
heatmap(mm)
magic(9)
fft(mm)
heatmap(fft(mm))
mmfft<-fft(mm)
mmr <- re(mmfft)
mmr <- Re(mmfft)
mmi <- Im(mmfft)
heatmap(mmr)
heatmap(mmi)
mmm<-mmr*mmr+mmi*mmi
heatmap(mmm)
heatmap(sqrt(mmm))
heatmap(mm)
heatmap(sqrt(mm)
)
heatmap(sqrt(abs(mm)))
heat.colors()
heat.colors(10)
topo.colors(10)
topo.colors(10)
?colorRampPallette
?colorRampPalette
?kmeans
install.packages("shiny")
library(shiny)
setwd("F:/Jiewen/COURSE2014/COURSERA/DataProducts")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?runApp
runApp()
runApp()
install.packages("UsingR")
runApp()
runApp(display.mode="showcase")
runApp()
runApp()
library(manipulate)
manipulate(plot(1:x),x=slider(1,100))
library(rCharts)
install.packages("rCharts")
library(devtools)
install_github("ramnathv/rCharts")
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq~Hair,group='Eye',type='multiBarChart',data=subset(haireye,Sex=='Male'))
library(rCharts)
n1 <- nPlot(Freq~Hair,group='Eye',type='multiBarChart',data=subset(haireye,Sex=='Male'))
n1$save('fig/n1.html',cdn=T)
nPlot(Freq~Hair,group='Eye',type='multiBarChart',data=subset(haireye,Sex=='Male'))
2:0.2:3
?windows
library(nlme)
library(lattice)
xyplot(weight~Time|Diet,BodyWeight)
?panel.lmline
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?trellis.par.set
?splom
?par
?print.trellis
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?ggplot
?ggplot2
?geom_smooth
?qplot
?nlme
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group='Eye',type= 'multiBarChart',
data=subset(haireye,Sex == 'Male')
)
n1$save('fig/n1.html',cdn=TRUE)
cat('<iframe src="fig/n1.html" width=100%, height=600></iframe>')
n1
names(iris) = gsub("\\.","",names(iris))
r1 <- rPlot(SepalLength ~ SepalWidth | Species,
data = iris,
color='Species', type = 'point')
r1$save('fig/r1.html',cdn=TRUE)
cat('<iframe src="fig/r1.html" width=100%, height=600></iframe>')
r1
r2 <-nPlot(Freq ~ Hair | Eye,
color = 'Eye',
type= 'bar',
data= haireye
)
r2$save('fig/r2.html',cdn=TRUE)
cat('<iframe src="fig/r2.html" width=100%, height=600></iframe>')
r2
r2 <-nPlot(Freq ~ Hair | Eye,
color = 'Eye',
type= 'bar',
data= haireye
)
r2$save('fig/r2.html',cdn=TRUE)
cat('<iframe src="fig/r2.html" width=100%, height=600></iframe>')
r2
head(haireye)
str(haireye)
str(iris)
n1 <- rPlot(Freq ~ Hair, group='Eye',type= 'multiBarChart',
data=subset(haireye,Sex == 'Male')
)
n1$save('fig/n1.html',cdn=TRUE)
cat('<iframe src="fig/n1.html" width=100%, height=600></iframe>')
n1
n1 <- nPlot(Freq ~ Hair, group='Eye',type= 'multiBarChart',
data=subset(haireye,Sex == 'Male')
)
n1$save('fig/n1.html',cdn=TRUE)
cat('<iframe src="fig/n1.html" width=100%, height=600></iframe>')
n1
r2 <-rPlot(Freq ~ Hair | Eye,
color = 'Eye',
type= 'bar',
data= haireye
)
r2$save('fig/r2.html',cdn=TRUE)
cat('<iframe src="fig/r2.html" width=100%, height=600></iframe>')
r2
?nPlot
?rPlot
r3$print("chart1") # print out the js
r3$save('myPlot.html') # save as html file
r3 <-rPlot(mpg ~ wt | am+vs,
data = mtcars,
color = 'gear',
type = 'point'
)
r3$print("chart1") # print out the js
r3$save('myPlot.html') # save as html file
r3$publish('myPlot',host='rpubs') # save to rpubs
data(economics, package = 'ggplot2')
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x="date",
y=c("psavert","uempmed"),
type="Line",
data = econ
)
m1$set(pointSize =0, lineWidth=1)
m1$save('fig/m1.html',cdn=TRUE)
cat('<iframe src="fig/m1.html" width=100%, height=600></iframe>')
m1
map3 <- Leaflet$new()
map3$setView(c(51.505,-0.09),zoom=13)
map3$marker(c(51.5,-0.09),
bindPopup="<p> Hi. I am a popup </p>")
map3$marker(c(51.495,-0.083),
bindPopup="<p> Hi. I am another one </p>")
map3$save('fig/map3.html',cdn=TRUE)
cat('<iframe src="fig/map3.html" width=100%, height=600></iframe>')
map3
library(slidify)
suppressPackageStartupMessages(library(googleVis))
install.packages("googleVis")
suppressPackageStartupMessages(library(googleVis))
M <-gvisMotionChart(Fruits,"Fruit","Year",
options= list(width=600,height=400))
print(M,"chart")
plot(M)
G <- gvisGeoChart(Exports,locationvar = "Country",
colorvar = "Profit",
options = list(width=600,height=400))
plot(G)
G <- gvisGeoChart(Exports,locationvar = "Country",
colorvar = "Profit",
options = list(width=600,height=400)
region="150"
)
plot(G)
G <- gvisGeoChart(Exports,locationvar = "Country",
colorvar = "Profit",
options = list(width=600,height=400),
region="150"
)
plot(G)
G <- gvisGeoChart(Exports,locationvar = "Country",
colorvar = "Profit",
options = list(width=600,height=400,region="150")
)
plot(G)
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300
))
plot(Line)
G <- gvisGeoChart(Exports, "Country", "Profit",
options=list(width=200, height=100))
T1 <- gvisTable(Exports,options=list(width=200, height=270))
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=400, height=370))
GT <- gvisMerge(G,T1, horizontal=FALSE)
GTM <- gvisMerge(GT, M, horizontal=TRUE,
tableOptions="bgcolor=\"#CCCCCC\" cellspacing=10")
plot(GTM)
demo(googleVis)
library(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries','ramnathv')
library(slidify)
setwd("F:/Jiewen/COURSE2014/COURSERA/DataProducts/testproj")
author("testproj")
slidify('index.Rmd')
browseURL('index.html')
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mu<-mean(x)
sum(w*(x-mu)^2)
